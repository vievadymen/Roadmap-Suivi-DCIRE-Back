<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Evenement extends \App\Entity\Evenement implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'thematique', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'etat', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'structure', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'commentaire', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'historiqueEvenement', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'periodicite', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'trancheHoraires', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'activite', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'autorites', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'start', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'end', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'confirmation'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'thematique', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'etat', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'structure', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'commentaire', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'historiqueEvenement', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'periodicite', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'trancheHoraires', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'activite', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'autorites', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'start', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'end', '' . "\0" . 'App\\Entity\\Evenement' . "\0" . 'confirmation'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Evenement $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getThematique(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThematique', []);

        return parent::getThematique();
    }

    /**
     * {@inheritDoc}
     */
    public function setThematique(string $thematique): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setThematique', [$thematique]);

        return parent::setThematique($thematique);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', []);

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat(string $etat): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', [$etat]);

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function getStructure(): ?\App\Entity\Structure
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStructure', []);

        return parent::getStructure();
    }

    /**
     * {@inheritDoc}
     */
    public function setStructure(?\App\Entity\Structure $structure): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStructure', [$structure]);

        return parent::setStructure($structure);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentaire(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentaire', []);

        return parent::getCommentaire();
    }

    /**
     * {@inheritDoc}
     */
    public function addCommentaire(\App\Entity\Commentaire $commentaire): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCommentaire', [$commentaire]);

        return parent::addCommentaire($commentaire);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCommentaire(\App\Entity\Commentaire $commentaire): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCommentaire', [$commentaire]);

        return parent::removeCommentaire($commentaire);
    }

    /**
     * {@inheritDoc}
     */
    public function getHistoriqueEvenement(): ?\App\Entity\HistoriqueEvenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHistoriqueEvenement', []);

        return parent::getHistoriqueEvenement();
    }

    /**
     * {@inheritDoc}
     */
    public function setHistoriqueEvenement(?\App\Entity\HistoriqueEvenement $historiqueEvenement): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHistoriqueEvenement', [$historiqueEvenement]);

        return parent::setHistoriqueEvenement($historiqueEvenement);
    }

    /**
     * {@inheritDoc}
     */
    public function getPeriodicite(): ?\App\Entity\Periodicite
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPeriodicite', []);

        return parent::getPeriodicite();
    }

    /**
     * {@inheritDoc}
     */
    public function setPeriodicite(?\App\Entity\Periodicite $periodicite): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPeriodicite', [$periodicite]);

        return parent::setPeriodicite($periodicite);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrancheHoraires(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrancheHoraires', []);

        return parent::getTrancheHoraires();
    }

    /**
     * {@inheritDoc}
     */
    public function addTrancheHoraire(\App\Entity\TrancheHoraire $trancheHoraire): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTrancheHoraire', [$trancheHoraire]);

        return parent::addTrancheHoraire($trancheHoraire);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTrancheHoraire(\App\Entity\TrancheHoraire $trancheHoraire): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTrancheHoraire', [$trancheHoraire]);

        return parent::removeTrancheHoraire($trancheHoraire);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(?\App\Entity\User $user): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivite(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivite', []);

        return parent::getActivite();
    }

    /**
     * {@inheritDoc}
     */
    public function addActivite(\App\Entity\Activite $activite): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addActivite', [$activite]);

        return parent::addActivite($activite);
    }

    /**
     * {@inheritDoc}
     */
    public function removeActivite(\App\Entity\Activite $activite): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeActivite', [$activite]);

        return parent::removeActivite($activite);
    }

    /**
     * {@inheritDoc}
     */
    public function getAutorites(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAutorites', []);

        return parent::getAutorites();
    }

    /**
     * {@inheritDoc}
     */
    public function addAutorite(\App\Entity\Autorite $autorite): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAutorite', [$autorite]);

        return parent::addAutorite($autorite);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAutorite(\App\Entity\Autorite $autorite): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAutorite', [$autorite]);

        return parent::removeAutorite($autorite);
    }

    /**
     * {@inheritDoc}
     */
    public function getStart(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStart', []);

        return parent::getStart();
    }

    /**
     * {@inheritDoc}
     */
    public function setStart(?\DateTimeInterface $start): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStart', [$start]);

        return parent::setStart($start);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnd(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnd', []);

        return parent::getEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnd(?\DateTimeInterface $end): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnd', [$end]);

        return parent::setEnd($end);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmation(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmation', []);

        return parent::getConfirmation();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmation(?bool $confirmation): \App\Entity\Evenement
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmation', [$confirmation]);

        return parent::setConfirmation($confirmation);
    }

}
